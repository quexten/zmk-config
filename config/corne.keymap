/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    macros {
        Copy: Copy {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings = <&kp LC(C)>;
        };
        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            label = "new_macroa";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp A>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp SINGLE_QUOTE  &kp LESS_THAN  &kp GREATER_THAN  &kp P      &kp Y      &kp F           &kp G          &kp C  &kp R  &kp L  &none
&none             &kp A          &kp O             &kp E  &kp U      &kp I      &kp D           &kp H          &kp T  &kp N  &kp S  &none
&none         &kp LCTRL          &kp Q             &kp J  &kp K      &kp X      &kp B           &kp M          &kp W  &kp V  &kp Z  &none
                                                   &mo 2  &mo 1  &kp SPACE    &kp RET  &kp LEFT_SHIFT  &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none   &kp N1  &kp N2  &kp N3  &kp N4        &kp N5           &kp N6          &kp N7    &kp N8        &kp N9     &kp N0   &none
&none  &kp TAB   &none   &none   &none         &none    &kp BACKSPACE        &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans
&none  &kp ESC  &trans  &trans  &trans  &kp LEFT_WIN       &kp DELETE          &trans    &trans        &trans     &trans  &trans
                         &mo 3  &trans         &none            &none  &kp LEFT_SHIFT     &none
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &none
&none    &trans  &trans    &trans    &trans     &trans    &kp MINUS  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH  &none
&none    &trans  &trans    &trans    &trans     &trans    &kp UNDER   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE  &none
                            &none     &mo 3      &none        &none     &trans            &none
            >;
        };

        Layer__3 {
            bindings = <
&trans     &kp F1     &kp F2     &kp F3     &kp F4     &kp F5    &kp F6  &kp F7  &kp F8   &kp F9  &kp F10  &trans
&trans     &trans  &kp LC(S)     &trans     &trans     &trans    &trans  &trans  &trans  &kp F11  &kp F12  &trans
&trans  &kp LC(Z)  &kp LC(X)  &kp LC(X)  &kp LC(C)  &kp LC(V)    &trans  &trans  &trans   &trans   &trans  &trans
                                 &trans     &trans     &trans    &trans   &mo 4  &trans
            >;
        };

        Meta {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_CLR  &trans  &trans  &trans  &trans  &trans
&trans         &none        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans
                                          &trans        &trans        &trans        &trans  &trans  &trans
            >;
        };
    };
};
